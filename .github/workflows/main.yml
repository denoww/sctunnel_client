name: Build EXE no Windows
run-name: ${{ github.workflow }} - ${{ github.actor }}

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Clonar o repositório
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Criar config.json com conteúdo secreto
        run: echo '${{ secrets.CONFIG_JSON }}' > config.json

      - name: Criar scTunnel.pem com conteúdo secreto
        run: echo "${{ secrets.SC_TUNNEL_PEM }}" > scTunnel.pem

      - name: Compilar EXE
        run: pyinstaller --onefile --name exec --hidden-import=cryptography.hazmat.bindings._rust --add-data "scTunnel.pem;." exec_tunnels.py


      - name: Baixar Npcap
        run: curl -L -o npcap.exe https://nmap.org/npcap/dist/npcap-1.78.exe

      - name: Instalar Inno Setup
        shell: cmd
        run: |
          curl -L -o innosetup.exe https://jrsoftware.org/download.php/is.exe
          innosetup.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-


      - name: Compilar Inno Setup
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" inno_installer.iss

      - name: Mover arquivos necessários
        run: |
          move dist\exec.exe exec.exe
          move Output\setup.exe setup.exe
          rename windows_install.bat install.bat

      - name: Upload do executável e arquivos necessários
        uses: actions/upload-artifact@v4
        with:
          name: pacote-tunnel-windows
          path: |
            exec.exe
            config.json
            install.bat
            setup.exe
