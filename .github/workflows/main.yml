name: Build EXE no Windows
run-name: ${{ github.workflow }} - ${{ github.actor }}

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Clonar o repositório
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # - name: Cache de dependências do pip
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Criar config.json com conteúdo secreto
        run: |
          echo '${{ secrets.CONFIG_JSON }}' > config.json

      - name: Criar scTunnel.pem com conteúdo secreto
        run: |
          echo "${{ secrets.SC_TUNNEL_PEM }}" > scTunnel.pem

      # - name: Compilar EXE
      #   run: pyinstaller --onefile --hidden-import=cryptography.hazmat.bindings._rust exec_tunnels.py

      - name: Compilar EXE
        run: pyinstaller --onefile --name exec --hidden-import=cryptography.hazmat.bindings._rust --add-data "scTunnel.pem;." exec_tunnels.py

        # run: pyinstaller --onefile --hidden-import=cryptography.hazmat.bindings._rust --add-data "scTunnel.pem;." --add-data "config.json;." exec.py



      - name: Arrumar arquivos
        run: |
          mv dist/exec.exe exec.exe
          mv windows_install.bat install.bat


      - name: Upload do executável e arquivos necessários
        uses: actions/upload-artifact@v4
        with:
          name: pacote-tunnel-windows
          path: |
            exec.exe
            config.json
            install.bat
          # path: |
          #   exec.exe
          #   config.json
          #   scTunnel.pem


      # - name: Upload do executável
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: exec-exe
      #     path: dist/exec.exe



# name: Teste no Windows com Python

# on: [push, pull_request]

# jobs:
#   windows:
#     runs-on: windows-latest

#     steps:
#       - name: Clonar o repositório
#         uses: actions/checkout@v3

#       - name: Configurar Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Criar config.json com conteúdo secreto
#         run: |
#           echo '${{ secrets.CONFIG_JSON }}' > config.json

#       - name: Criar scTunnel.pem com conteúdo secreto
#         run: |
#           echo "${{ secrets.SC_TUNNEL_PEM }}" > scTunnel.pem

#       - name: Instalar dependências
#         run: |
#           python -m pip install --upgrade pip
#           pip install pyinstaller
#           pip install -r requirements.txt

#       - name: Compilar EXE
#         run: pyinstaller --onefile exec.py

#       - name: Upload do executável
#         uses: actions/upload-artifact@v3
#         with:
#           name: exec-exe
#           path: dist/exec.exe

#       # - name: Instalar dependências
#       #   run: |
#       #     bash exec_install_python_version.sh

#       # - name: Mostrar variáveis e arquivos
#       #   run: |
#       #     dir
#       #     cat config.json

#       # - name: Executar script com logs
#       #   run: |
#       #     $env:TESTE_GIT_ACTION = "true"
#       #     python exec_tunnels.py
